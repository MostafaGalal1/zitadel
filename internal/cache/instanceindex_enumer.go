// Code generated by "enumer -type InstanceIndex -trimprefix InstanceIndex"; DO NOT EDIT.

package cache

import (
	"fmt"
	"strings"
)

const _InstanceIndexName = "ByIDByHost"

var _InstanceIndexIndex = [...]uint8{0, 4, 10}

const _InstanceIndexLowerName = "byidbyhost"

func (i InstanceIndex) String() string {
	if i < 0 || i >= InstanceIndex(len(_InstanceIndexIndex)-1) {
		return fmt.Sprintf("InstanceIndex(%d)", i)
	}
	return _InstanceIndexName[_InstanceIndexIndex[i]:_InstanceIndexIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _InstanceIndexNoOp() {
	var x [1]struct{}
	_ = x[InstanceIndexByID-(0)]
	_ = x[InstanceIndexByHost-(1)]
}

var _InstanceIndexValues = []InstanceIndex{InstanceIndexByID, InstanceIndexByHost}

var _InstanceIndexNameToValueMap = map[string]InstanceIndex{
	_InstanceIndexName[0:4]:       InstanceIndexByID,
	_InstanceIndexLowerName[0:4]:  InstanceIndexByID,
	_InstanceIndexName[4:10]:      InstanceIndexByHost,
	_InstanceIndexLowerName[4:10]: InstanceIndexByHost,
}

var _InstanceIndexNames = []string{
	_InstanceIndexName[0:4],
	_InstanceIndexName[4:10],
}

// InstanceIndexString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func InstanceIndexString(s string) (InstanceIndex, error) {
	if val, ok := _InstanceIndexNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _InstanceIndexNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to InstanceIndex values", s)
}

// InstanceIndexValues returns all values of the enum
func InstanceIndexValues() []InstanceIndex {
	return _InstanceIndexValues
}

// InstanceIndexStrings returns a slice of all String values of the enum
func InstanceIndexStrings() []string {
	strs := make([]string, len(_InstanceIndexNames))
	copy(strs, _InstanceIndexNames)
	return strs
}

// IsAInstanceIndex returns "true" if the value is listed in the enum definition. "false" otherwise
func (i InstanceIndex) IsAInstanceIndex() bool {
	for _, v := range _InstanceIndexValues {
		if i == v {
			return true
		}
	}
	return false
}
